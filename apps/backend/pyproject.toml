[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smart_home_system"
version = "0.1.0"
description = "智能家居控制系统"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.95.0",
    "uvicorn>=0.22.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.0.0",
    "python-multipart",
    "python-jose[cryptography]",
    "passlib[bcrypt]",
    "aiohttp",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "mypy",
    "flake8",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    "pytest-asyncio>=0.21.0",
]

[tool.hatch.envs.default.scripts]
server = "uvicorn main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
lint = "flake8 ."
format = "black ."

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.setuptools]
packages = ["api", "db", "devices", "services", "utils"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v"

